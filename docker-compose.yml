version: '3.8'

services:
  # Backend API (Cloud-ready)
  backend:
    build: ./backend
    container_name: bionexus-backend-cloud
    environment:
      # Neo4j Aura Cloud Database
      - NEO4J_URI=${NEO4J_URI:-neo4j+s://your-neo4j-instance.databases.neo4j.io}
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      
      # Milvus Cloud Vector Database  
      - MILVUS_HOST=${MILVUS_HOST}
      - MILVUS_PORT=${MILVUS_PORT:-19530}
      - MILVUS_USER=${MILVUS_USER}
      - MILVUS_PASSWORD=${MILVUS_PASSWORD}
      - MILVUS_SECURE=${MILVUS_SECURE:-true}
      - MILVUS_COLLECTION_NAME=${MILVUS_COLLECTION_NAME:-bionexus_embeddings}
      
      # Google Cloud Storage
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME:-bionexus-documents}
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - GCS_CREDENTIALS_PATH=${GCS_CREDENTIALS_PATH}
      
      # External APIs
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - METEOMATICS_USERNAME=${METEOMATICS_USERNAME}
      - METEOMATICS_PASSWORD=${METEOMATICS_PASSWORD}
      - AZURE_COGNITIVE_KEY=${AZURE_COGNITIVE_KEY}
      - MIRO_API_KEY=${MIRO_API_KEY}
      
      # Application Configuration
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      
      # Cloud Environment
      - CLOUD_ENVIRONMENT=gcp
      - CORS_ORIGINS=["https://app.bionexus.space","https://bionexus.space","http://localhost:3000"]
      
    ports:
      - "8000:8000"
    volumes:
      # Mount Google Cloud credentials if using file-based auth
      - ${GOOGLE_APPLICATION_CREDENTIALS:-./gcp-key.json}:/app/gcp-key.json:ro
      - ./data:/app/data:ro  # Sample data - read only
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application (Cloud-ready)
  frontend:
    build: ./frontend
    container_name: bionexus-frontend-cloud
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.bionexus.space}
      - NEXT_PUBLIC_ENVIRONMENT=${ENVIRONMENT:-production}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_MIRO_CLIENT_ID=${MIRO_CLIENT_ID}
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional - can use Google Cloud Memorystore instead)
  redis:
    image: redis:7-alpine
    container_name: bionexus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

networks:
  default:
    name: bionexus-cloud